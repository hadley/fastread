% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_googlesheet.R
\name{read_googlesheet}
\alias{read_googlesheet}
\alias{read_gs}
\title{Read a Google Sheet into a tibble}
\usage{
read_googlesheet(url, range = NULL, ...)

read_gs(url, range = NULL, ...)
}
\arguments{
\item{url}{URL (address) of the Google Sheet to read. To read a specific
sheet, switch to this sheet and copy its full URL from the address bar;
it will include a sheet identifier (that looks like \code{gid=12345}) and
read that sheet only.}

\item{range}{A character string defining a range of data to read. All
valid Google Sheet ranges are acceptable: "A1:C5" reads lines 1 to 5 in
columns A to C; "A3:C" or "A:C3" read from line 3 onwards, in columnes
A to C; "A:C" reads all lines in columns A to C.}

\item{...}{Passed to \code{\link[=read_csv]{read_csv()}}.}
}
\value{
A \code{\link[=tibble]{tibble()}}. If there are parsing problems, a warning tells you
how many, and you can retrieve the details with
\code{\link{problems}()}.
}
\description{
Export a Google Sheet as \code{.csv} and read with \code{\link[=read_csv]{read_csv()}}.
}
\details{
For this to work, the Google Sheet needs to be either public or
accessible through its link: \code{File > Share > Anyone with the link can view} (at least).

The link to export the sheet as \code{.csv} is built from the URL (by
substituting \code{/export?format=csv} to \code{/edit} in the URL) and the data
is read from there. This does not use the "Google Visualization API"
and therefore cannot read data resulting from SQL-like queries built
with its \href{https://developers.google.com/chart/interactive/docs/querylanguage}{Query Language}.
Using this API would be more powerful but requires to provide the name
of the sheet rather than extracting the sheet identifier from the URL.
}
\examples{
# An example Google Sheet with two sheets is used.
# The sheets respectively contain the `mtcars` and `iris` datasets

# URL to the first sheet
url <- "https://docs.google.com/spreadsheets/d/1bkLTSMLobkBjIPY0HaLJjW2J_shER3kTXP6SoXdER0k/edit#gid=0"
# Read it in full
read_googlesheet(url)
# or just a piece of it
read_googlesheet(url, range="A1:C5")
# and pass additional arguments to read_csv()
read_googlesheet(url, col_types=cols())
read_googlesheet(url, skip=10, col_names=FALSE)

# Read the second sheet
url <- "https://docs.google.com/spreadsheets/d/1bkLTSMLobkBjIPY0HaLJjW2J_shER3kTXP6SoXdER0k/edit#gid=670137368"
read_googlesheet(url, col_types=cols())

# You can also use the shorthand
read_gs(url, col_types=cols())
}
