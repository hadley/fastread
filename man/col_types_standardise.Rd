% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/col_types.R
\name{col_types_standardise}
\alias{col_types_standardise}
\title{Standardise column types.}
\usage{
col_types_standardise(col_types, col_names, guessed_types)
}
\arguments{
\item{col_types}{One of \code{NULL}, a list, a named list or a string.
  See \code{vignette("column-types")} for more details.

  If \code{NULL}, the column type will be imputed from the first 1000 rows
  on the input. This is convenient (and fast), but not robust. If the
  imputation fails, you'll need to supply the correct types yourself.

  If a list, it must contain one "\code{\link{collector}}" for each column.
  If you only want to read a subset of the columns, you can use a named list
  (where the names give the column names). If a column is not mentioned by
  name, it will be parsed with the default collector (as determined by
  reading the first 1000 rows).

  Alternatively, you can use a compact string representation where each
  character represents one column: c = character, d = double, i = integer,
  l = logical, ? = guess, or \code{_}/\code{-} to skip the column.

  To select a subset of columns, and set the types, by regular expressions
  you may pass a list with two elements and \code{attr(., 'regex') == TRUE},
  or use the function \code{col_regex_type()} to generate said list.
  The first element of the list is a character vector or regular expressions,
  the second element is a character vector of "l", "d", "i", etc. to denote
  the data type of the columns.}

\item{col_names}{A character vector naming the columns.}

\item{rows}{A data frame containing the first few rows, parsed as
character vectors.}
}
\description{
Standardise column types.
}
\keyword{internal}

